<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>samirparhi.com - CyberSecurity</title>
    <subtitle>Blog Site of Samir Parhi</subtitle>
    <link rel="self" type="application/atom+xml" href="https://samirparhi.com/tags/cybersecurity/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://samirparhi.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-04-27T00:00:00+00:00</updated>
    <id>https://samirparhi.com/tags/cybersecurity/atom.xml</id>
    <entry xml:lang="en">
        <title>SBOM: Know the Software&#x27;s source of truth</title>
        <published>2024-04-27T00:00:00+00:00</published>
        <updated>2024-04-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Samir Ranjan Parhi
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://samirparhi.com/sbom-source-of-truth/"/>
        <id>https://samirparhi.com/sbom-source-of-truth/</id>
        
        <content type="html" xml:base="https://samirparhi.com/sbom-source-of-truth/">&lt;p&gt;Over the years, our focus has been on enhancing our software‚Äôs functionality and striving for vendor neutrality. We‚Äôve integrated various freely available modules from diverse sources to expand our applications. However, we inadvertently overlooked verifying the authenticity of these sources.&lt;&#x2F;p&gt;
&lt;p&gt;Nowadays, with privacy concerns escalating across individuals and organisations, we‚Äôve started scrutinising the origins of each code segment extensively. This scrutiny is aimed at ensuring that we can confidently deliver authentic products to our end-users without compromising on features while maintaining compatibility with other software.&lt;&#x2F;p&gt;
&lt;p&gt;The term SBOM (Software Bill of Materials) has become increasingly prominent in industry discussions over the past year. It‚Äôs likely that we‚Äôll see a surge in demands for this skill set in the near future.&lt;&#x2F;p&gt;
&lt;p&gt;SBOM is to establishing trust, much like how blockchain operates.
For instance, in a blockchain scenario:&lt;&#x2F;p&gt;
&lt;p&gt;when purchasing a diamond ring, the blockchain ensures the authenticity of the product from its mining origins to its delivery to the customer, despite involving numerous vendors and steps in the supply chain.&lt;&#x2F;p&gt;
&lt;p&gt;Similarly, SBOM applies this logic to software. While we may utilise various modules or dependencies in our codebase to create impressive products, SBOM provides crucial information regarding the authenticity and vulnerabilities of these third-party components.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;So, SBOM is for Whom?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Technically for Everyone (because privacy is our Rights not an option üòä)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Primarily for developers, solution architects&#x2F;Consultants, delivery partners,&lt;&#x2F;li&gt;
&lt;li&gt;Companies or individuals consuming the software&lt;&#x2F;li&gt;
&lt;li&gt;Vendors or agencies providing its ongoing support (AMC).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;For whom it is a whistle blower?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Based on recent analyses from various articles, it‚Äôs evident that there‚Äôs a growing trend towards embracing and promoting open source. While this is a positive development, the open nature of such projects means that they attract contributors and collaborators from around the globe who share their code. However, this openness also introduces potential risks. In some cases, developers may not adhere to best coding practices, particularly in popular codebases where thorough code reviews might not occur. Consequently, there‚Äôs a heightened risk of subpar code being committed to the codebase.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;What‚Äôs the solution then?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Indeed, thanks to the global open-source community, initiatives have been taken to develop and promote SBOM tools, enabling meticulous scrutiny of each code segment. These tools can operate during various stages, including raising a PR, building applications, and containerizing code, ensuring thorough checks even when end customers consume the software. This advancement provides developers and technical professionals involved in product development with peace of mind. The SBOM tool space continues to evolve and improve daily. Let‚Äôs delve into some of these open-source SBOM tools:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sbomit.dev&quot;&gt;Sbomit&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.fossology.org&quot;&gt;Fossology&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cyclonedx.org&quot;&gt;Cyclonedx&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.tldrlegal.com&quot;&gt;Tldrlegal&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;owasp-dep-scan&#x2F;dep-scan&quot;&gt;Dep Scan&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;bom&quot;&gt;BOM for K8S&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;projects.eclipse.org&#x2F;projects&#x2F;technology.sw360&quot;&gt;SW360&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tern-tools&#x2F;tern&quot;&gt;Tern&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nexB&#x2F;scancode-toolkit&quot;&gt;scancode-toolkit&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fossid.com&#x2F;open-source-audit-services&#x2F;&quot;&gt;Fossid&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.leanix.net&#x2F;en&#x2F;wiki&#x2F;trm&#x2F;software-bill-of-materials&quot;&gt;Leanix&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.yoctoproject.org&quot;&gt;Yoctoproject&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hogliux&#x2F;bomutils&quot;&gt;Bomutils&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;Popular Reporting Standards:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;spdx.dev&#x2F;use&#x2F;tools&#x2F;open-source-tools&#x2F;&quot;&gt;SPDX&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Is there a way to ensure End-user Confidence ?&lt;&#x2F;p&gt;
&lt;p&gt;Absolutely, we possess the means to attest and sign our products, thereby offering transparency regarding the risk posture to end customers. Credit goes to the open-source community for dedicating efforts to develop tools capable of attesting and verifying containerized binaries and files. This allows any end customer to verify the risk posture of the software being consumed using the generated certificate.&lt;&#x2F;p&gt;
&lt;p&gt;Few Open Source Attestation Tools are listed below :&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tools&quot;&gt;Tools:&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.sigstore.dev&quot;&gt;Sigstore‚Äôs Cosign&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sigstore&#x2F;cosign&quot;&gt;GitHub&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;notaryproject&#x2F;notary&quot;&gt;Notary&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;engine&#x2F;security&#x2F;trust&quot;&gt;DCT (Docker Content Trust)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;in-toto&#x2F;attestation&quot;&gt;In-toto&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;IBM&#x2F;portieris&quot;&gt;Portieris&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;open-source-frameworks&quot;&gt;Open Source Frameworks:&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;theupdateframework.io&quot;&gt;TUF (The Update Framework)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;open-source-registries&quot;&gt;Open Source Registries:&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;goharbor.io&#x2F;docs&#x2F;2.7.0&#x2F;working-with-projects&#x2F;working-with-images&#x2F;sign-images&#x2F;&quot;&gt;Harbor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Docker Hub: &lt;em&gt;you know the link right ü§î&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;After All, SBOM is becoming indispensable in ensuring software authenticity and security, benefiting stakeholders across the development and consumption spectrum.
Hope you loved reading it. üçª&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Which service to Use Azure Kubernetes Services or Azure App service (A curated topic)</title>
        <published>2024-04-12T00:00:00+00:00</published>
        <updated>2024-04-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Samir Ranjan Parhi
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://samirparhi.com/which-service-to-use-azure/"/>
        <id>https://samirparhi.com/which-service-to-use-azure/</id>
        
        <content type="html" xml:base="https://samirparhi.com/which-service-to-use-azure/">&lt;p&gt;Following aspects are taken in to account in this article:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212121;color:#eeffff;&quot;&gt;&lt;code&gt;&lt;span&gt;‚Ä¢ Deployment and Administration
&lt;&#x2F;span&gt;&lt;span&gt;‚Ä¢ Cost analysis
&lt;&#x2F;span&gt;&lt;span&gt;‚Ä¢ Value addition
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Deployment and administration:&lt;&#x2F;p&gt;
&lt;p&gt;Deploying with the AKS is encapsulated still distributed. Which means all the workload stay inside the cluster and also the work space has a very fine grain separation with Namespaces. So In case of any issues related to workload it is quite easier to spot the bug because the issues lies in the same enclosed areas. However if we deploy in the app services , which is a black box for the developer or end user. Spotting of issue only lies on the logs that we obtain form the log stream which is time taking and tedious .  Some times log streams takes time to show the logs. and Sometime it does not show logs.  In the same line, if we deployment our Work load with AKS, we can have a upper-hand control of what we want to do in the system, With the help of open-source monitoring tool stack with (prometheus, loki and grafana) , we now have the each and every-log streamed our dash board for the near real time visualization (refresh rate 10s max). And also we can customize our metrics based on our requirement which is not doable by the azure metrics service.&lt;&#x2F;p&gt;
&lt;p&gt;The compute resource perspective:
App services essentially runs on app service plan. In the current scenario, The Maximum spec for the premium app service i,e  lets say P2V2  you will get max of 4 core and the cost is too high, will be discussing the cost part in the cost section. However, if you consider the price of P2V2  with V4 cpu you can build a very powerful AKS cluster which will perform better.
Deployment and CI&#x2F;CD :
The Deployment of the Kubernetes work loads are more controlled, It allows out-of-the-box deployment strategy (rolling update) to ensure there is zero-downtime. However this feature is there in The App service but that seems not to be that effective than  AKS.
Workload management in the AKS cluster (any Kubernetes cluster) is a beauty of migrating to Kubernetes. its brings better and fine-grained  auto scaling , POD lifecycle-management ,out of the box load-balancing capacity and more abstracted way to deploy your application and internal micro-service networking. You can even secure your AKS application in the way you want but few flexibility are restricted in app service.
To summarize, Management of the Azure workload are more effort less than the app services. More customization can be done to get most out of K8s cluster but limited in App service. You can not integrate different type of services with App service, in the other-hand most of the today‚Äôs services and workload are K8s compatible. Service-mesh, which provide a lots of functionality in today‚Äôs infrastructure word and mandatory to have in your infrastructure to address a lot of infrastructure common best practices are compatible with K8s but no with App services. When we tall about powerful  monitoring and logging system (Prometheus, loki, Grafana ) are pluggable or can be integrated seamlessly with K8s but it is bit tedious to integrate the monitoring stack with App Services. Form my point of view App services are not design for mid range Production grade Application however it is recommended to develop and test something in App-service for short term.
Cost analysis:
In App service , all the app services shares the same app service plan , which means they consume the resources defined in an app service plan. Think of a situation where you have increased no of app services that are not more accommodated in the existing app service plan, you may end of buying more app service plan which is a very costly option. In the same time you Kubernetes cluster can have a lot more capacity to deploy micro services in much much lesser price and you can even reduce this price lesser with better planning and opting for reserved instances like 1 year or 3 year Reserved instance which will reduce the cost to 60%
Below section elaborates the costing for AKS as well as App Service with Example:
AKS Costing for various buying option:
AKS is most cost effective as it does not charge on the Cluster management. It only charges for the node you use and the storage you use. Nodes are the basically VMs, One or more node combines together to create a VM scale set which in AKS term called as NodePool . You can always have a option to save money by choosing reserved instances which will save up to 60% cost.&lt;&#x2F;p&gt;
&lt;p&gt;For more info on VM price please visit to https:&#x2F;&#x2F;azure.microsoft.com&#x2F;en-in&#x2F;pricing&#x2F;details&#x2F;virtual-machines&#x2F;linux&#x2F;&lt;&#x2F;p&gt;
&lt;p&gt;App Services Buying option:
you can relate App Services to the ready made VM which has a common pool of compute resources. All the VM consumes the resource from a app service plan. For example if there is app service plan with  2 V cpu and 5 GB ram , and your are running 2 app services. If one app service is using 1.5 core of cpu and another workload now want to run and it needs at-least 1 core cpU then then the app can not work. in this case you have to by a new app-service plan. Autoscaling option is also not that effective as auto scaling effects on the app-service. So once you auto scale all the App-service will again start consuming which not a controlled way of resource management. Imp: Please not that there is no way you can reduce cost on App service as there is no concept of reserved resources like AKS.&lt;&#x2F;p&gt;
&lt;p&gt;For more info on App Service pricing visit to https:&#x2F;&#x2F;azure.microsoft.com&#x2F;en-in&#x2F;pricing&#x2F;details&#x2F;app-service&#x2F;linux&#x2F;&lt;&#x2F;p&gt;
&lt;p&gt;Value Addition:&lt;&#x2F;p&gt;
&lt;p&gt;There are a lot of value addition when you use Kubernetes.
‚Ä¢ Be proud that you are using proven and test infrastructure architecture  used by the global Companies.
‚Ä¢ You will get a lot of Open source utility tool to work with Kubernetes cluster which will help to administrate the cluster  better, also increase your productivity and keeping your cluster healthy.
‚Ä¢ Fantastic community support , so that you wont feel left out .
‚Ä¢ Better management of your workload and its supporting component
‚Ä¢ You can drill down to the very details of your workload component to investigate . Nothing is Black-box
‚Ä¢ You can create your Custom controller for your specific need with is a feature from K8s.
As per the above analysis we can conclude that App service are good to start with but not ideal for real&#x2F; production workload and limited in various features. So moving to AKS&#x2F;Kubernetes based workload deployment is more effective and smartest way to deliver superior product experience to end users.
Now Let‚Äôs do your Bit:
‚Ä¢ As this is mentioned is a curated topic, I would encourage all the reader to add as many information here, so that it could be one stop information for the people.
‚Ä¢ Please comment if anything wrong and anything can be improved
‚Ä¢ Do let me know what you want me write next.
Hope this Help !!!&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
