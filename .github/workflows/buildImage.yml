
name: Build and attest Docker Image

# on:
#   push:
#     branches:
#       - main
on:
  workflow_dispatch:

jobs:
  BuildingAndScanningAppImage:
    runs-on: ubuntu-latest

    steps:
    - name: Get current timestamp
      id: timestamp
      run: |
        echo "TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

    

    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: taiki-e/install-action@v2
      with:
        tool: zola@0.19.1

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: | 
        npm install
        npm install -D tailwindcss
        
    - name: Run Tailwind CSS build and Zola
      run: |
        npx tailwindcss -i styles/styles.css -o static/styles/styles.css
        zola build

    - name: Verify installation
      run: npm ls --depth=0

    - name: Rename folder from 'public' to 'docs'
      run: |
        if [ -d "public" ]; then
          mv public docs
        else
          echo "Folder 'public' does not exist."
          exit 1
        fi
    - name: Use GitHub PAT
      run: echo ${{ secrets.GITHUB_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.CAPITA7_WRITE }}

    - name: Commit and push changes
      run: |
        git config user.email "capita7-github-actions@capita7.com"
        git config user.name "capita7-github-actions-user"
        git add docs
        git commit -m "Created 'docs' folder "
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.CAPITA7_WRITE }}

    # - name: Build Docker image
    #   run: |
    #     echo $pwd
    #     ls
    #     docker build -t ghcr.io/${{ github.repository_owner }}/capita-7-website:latest .

    #     DIGEST=$(docker inspect --format='{{index .Id}}' ghcr.io/${{ github.repository_owner }}/capita-7-website:latest)
    #     echo "DIGEST=$DIGEST" >> $GITHUB_ENV

    # - name: Log in to Container Registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.CONTAINER_SEC }}

    # - name: Install Cosign
    #   uses: sigstore/cosign-installer@v3.5.0

    # - name: Check install!
    #   run: cosign version
  
    # - name: Create Attestation for your Container Image
    #   run: |
    #     cosign attest --key env://COSIGN_PRIVATE_KEY --predicate imageAttestation.json ghcr.io/${{ github.repository_owner }}/capita-7-website:latest
    #   env:
    #     COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

    # - name: Push Container image to GitHub Container Registry
    #   run: |
    #     docker push ghcr.io/${{ github.repository_owner }}/capita-7-website:latest
